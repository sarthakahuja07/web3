{
  "address": "0xE573D06c9A919eD65E81745F6B3d18e909087c3E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "notOwnerError",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getFundsFromAdrress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1d220b7e464969477864dd6d496a00361b8145c6f5f2fdacd79189900b0e2341",
  "receipt": {
    "to": null,
    "from": "0x27da4f2108274d608486d6e107BAB997aefB5dc3",
    "contractAddress": "0xE573D06c9A919eD65E81745F6B3d18e909087c3E",
    "transactionIndex": 8,
    "gasUsed": "862414",
    "logsBloom": "0x
    "blockHash": "0x5ad535c6c8f0625699bb3890dc91efc9c14e105084b9c11aa2071640b4f1ac63",
    "transactionHash": "0x1d220b7e464969477864dd6d496a00361b8145c6f5f2fdacd79189900b0e2341",
    "logs": [],
    "blockNumber": 11077798,
    "cumulativeGasUsed": "1666956",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "c270a9bb7f754a72cc771fd96246c256",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"notOwnerError\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getFundsFromAdrress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceConvertor.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nerror notOwnerError();\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConvertor for uint256;\\r\\n\\r\\n    uint256 public constant MIN_USD = 1 * 1e18;\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToFunds;\\r\\n    address public immutable owner;\\r\\n    AggregatorV3Interface private priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    modifier isOwner() {\\r\\n        // require(msg.sender == owner, \\\"only owner can call this function\\\");\\r\\n        if (msg.sender != owner) {\\r\\n            revert notOwnerError();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            msg.value.getConversionRate(priceFeed) > MIN_USD,\\r\\n            \\\"minimum of 10USD needed\\\"\\r\\n        );\\r\\n        funders.push(msg.sender);\\r\\n        addressToFunds[msg.sender] += msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public isOwner {\\r\\n        for (uint i = 0; i < funders.length; i++) {\\r\\n            address founderAddress = funders[i];\\r\\n            addressToFunds[founderAddress] = 0;\\r\\n        }\\r\\n        funders = new address[](0);\\r\\n        //  to transfer - 3 methods - send,transfer, call\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n\\r\\n        // payable(msg.sender).send(address(this).balance);\\r\\n\\r\\n        (bool success, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(success, \\\"withdraw failed\\\");\\r\\n    }\\r\\n\\r\\n    function getFundsFromAdrress(address funder) public view returns (uint256) {\\r\\n        return addressToFunds[funder];\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7529b2479fb7d0bc400867c54258b80e3379219e7ebb91e14ebcca60c069d425\",\"license\":\"GPL-3.0\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConvertor {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int price, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 priceInUSD = (ethPrice * ethAmount) / 1e18;\\r\\n        return priceInUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6319555370de96a2ce83725463e0d7dd6240c1d3ca1724097417bf99e7886a47\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f9d380380610f9d83398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e386101656000396000818161031a015261055a0152610e386000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010c578063b60d428814610137578063ba5a5fd814610141578063dc0d3dff1461017e57610083565b8063213dbea21461008d578063321de58e146100b85780633ccfd60b146100f557610083565b36610083576100816101bb565b005b61008b6101bb565b005b34801561009957600080fd5b506100a26102f4565b6040516100af91906107a0565b60405180910390f35b3480156100c457600080fd5b506100df60048036038101906100da919061081e565b610300565b6040516100ec91906107a0565b60405180910390f35b34801561010157600080fd5b5061010a610318565b005b34801561011857600080fd5b50610121610558565b60405161012e919061085a565b60405180910390f35b61013f6101bb565b005b34801561014d57600080fd5b506101686004803603810190610163919061081e565b61057c565b60405161017591906107a0565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a091906108a1565b6105c5565b6040516101b2919061085a565b60405180910390f35b670de0b6b3a76400006101f9600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461060490919063ffffffff16565b11610239576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102309061092b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102eb919061097a565b92505081905550565b670de0b6b3a764000081565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039d576040517fde4e3a2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104485760008082815481106103c2576103c16109d0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610440906109ff565b9150506103a0565b50600067ffffffffffffffff81111561046457610463610a48565b5b6040519080825280602002602001820160405280156104925781602001602082028036833780820191505090505b50600090805190602001906104a89291906106e0565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104cf90610aa8565b60006040518083038185875af1925050503d806000811461050c576040519150601f19603f3d011682016040523d82523d6000602084013e610511565b606091505b5050905080610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054c90610b09565b60405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600081815481106105d557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061061083610640565b90506000670de0b6b3a764000085836106299190610b29565b6106339190610bb2565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561068957600080fd5b505afa15801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c19190610c70565b5050509150506402540be400816106d89190610ceb565b915050919050565b828054828255906000526020600020908101928215610759579160200282015b828111156107585782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610700565b5b509050610766919061076a565b5090565b5b8082111561078357600081600090555060010161076b565b5090565b6000819050919050565b61079a81610787565b82525050565b60006020820190506107b56000830184610791565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107eb826107c0565b9050919050565b6107fb816107e0565b811461080657600080fd5b50565b600081359050610818816107f2565b92915050565b600060208284031215610834576108336107bb565b5b600061084284828501610809565b91505092915050565b610854816107e0565b82525050565b600060208201905061086f600083018461084b565b92915050565b61087e81610787565b811461088957600080fd5b50565b60008135905061089b81610875565b92915050565b6000602082840312156108b7576108b66107bb565b5b60006108c58482850161088c565b91505092915050565b600082825260208201905092915050565b7f6d696e696d756d206f66203130555344206e6565646564000000000000000000600082015250565b60006109156017836108ce565b9150610920826108df565b602082019050919050565b6000602082019050818103600083015261094481610908565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061098582610787565b915061099083610787565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109c5576109c461094b565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a0a82610787565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a3d57610a3c61094b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a92600083610a77565b9150610a9d82610a82565b600082019050919050565b6000610ab382610a85565b9150819050919050565b7f7769746864726177206661696c65640000000000000000000000000000000000600082015250565b6000610af3600f836108ce565b9150610afe82610abd565b602082019050919050565b60006020820190508181036000830152610b2281610ae6565b9050919050565b6000610b3482610787565b9150610b3f83610787565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b7857610b7761094b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bbd82610787565b9150610bc883610787565b925082610bd857610bd7610b83565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c0281610be3565b8114610c0d57600080fd5b50565b600081519050610c1f81610bf9565b92915050565b6000819050919050565b610c3881610c25565b8114610c4357600080fd5b50565b600081519050610c5581610c2f565b92915050565b600081519050610c6a81610875565b92915050565b600080600080600060a08688031215610c8c57610c8b6107bb565b5b6000610c9a88828901610c10565b9550506020610cab88828901610c46565b9450506040610cbc88828901610c5b565b9350506060610ccd88828901610c5b565b9250506080610cde88828901610c10565b9150509295509295909350565b6000610cf682610c25565b9150610d0183610c25565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d4057610d3f61094b565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d7d57610d7c61094b565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dba57610db961094b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610df757610df661094b565b5b82820290509291505056fea2646970667358221220d983710a04dece2c3c47cd935cb37427eca80675951c91c601b6f8558aa321ae64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010c578063b60d428814610137578063ba5a5fd814610141578063dc0d3dff1461017e57610083565b8063213dbea21461008d578063321de58e146100b85780633ccfd60b146100f557610083565b36610083576100816101bb565b005b61008b6101bb565b005b34801561009957600080fd5b506100a26102f4565b6040516100af91906107a0565b60405180910390f35b3480156100c457600080fd5b506100df60048036038101906100da919061081e565b610300565b6040516100ec91906107a0565b60405180910390f35b34801561010157600080fd5b5061010a610318565b005b34801561011857600080fd5b50610121610558565b60405161012e919061085a565b60405180910390f35b61013f6101bb565b005b34801561014d57600080fd5b506101686004803603810190610163919061081e565b61057c565b60405161017591906107a0565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a091906108a1565b6105c5565b6040516101b2919061085a565b60405180910390f35b670de0b6b3a76400006101f9600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461060490919063ffffffff16565b11610239576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102309061092b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102eb919061097a565b92505081905550565b670de0b6b3a764000081565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039d576040517fde4e3a2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104485760008082815481106103c2576103c16109d0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610440906109ff565b9150506103a0565b50600067ffffffffffffffff81111561046457610463610a48565b5b6040519080825280602002602001820160405280156104925781602001602082028036833780820191505090505b50600090805190602001906104a89291906106e0565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104cf90610aa8565b60006040518083038185875af1925050503d806000811461050c576040519150601f19603f3d011682016040523d82523d6000602084013e610511565b606091505b5050905080610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054c90610b09565b60405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600081815481106105d557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061061083610640565b90506000670de0b6b3a764000085836106299190610b29565b6106339190610bb2565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561068957600080fd5b505afa15801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c19190610c70565b5050509150506402540be400816106d89190610ceb565b915050919050565b828054828255906000526020600020908101928215610759579160200282015b828111156107585782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610700565b5b509050610766919061076a565b5090565b5b8082111561078357600081600090555060010161076b565b5090565b6000819050919050565b61079a81610787565b82525050565b60006020820190506107b56000830184610791565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107eb826107c0565b9050919050565b6107fb816107e0565b811461080657600080fd5b50565b600081359050610818816107f2565b92915050565b600060208284031215610834576108336107bb565b5b600061084284828501610809565b91505092915050565b610854816107e0565b82525050565b600060208201905061086f600083018461084b565b92915050565b61087e81610787565b811461088957600080fd5b50565b60008135905061089b81610875565b92915050565b6000602082840312156108b7576108b66107bb565b5b60006108c58482850161088c565b91505092915050565b600082825260208201905092915050565b7f6d696e696d756d206f66203130555344206e6565646564000000000000000000600082015250565b60006109156017836108ce565b9150610920826108df565b602082019050919050565b6000602082019050818103600083015261094481610908565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061098582610787565b915061099083610787565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109c5576109c461094b565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a0a82610787565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a3d57610a3c61094b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a92600083610a77565b9150610a9d82610a82565b600082019050919050565b6000610ab382610a85565b9150819050919050565b7f7769746864726177206661696c65640000000000000000000000000000000000600082015250565b6000610af3600f836108ce565b9150610afe82610abd565b602082019050919050565b60006020820190508181036000830152610b2281610ae6565b9050919050565b6000610b3482610787565b9150610b3f83610787565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b7857610b7761094b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bbd82610787565b9150610bc883610787565b925082610bd857610bd7610b83565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c0281610be3565b8114610c0d57600080fd5b50565b600081519050610c1f81610bf9565b92915050565b6000819050919050565b610c3881610c25565b8114610c4357600080fd5b50565b600081519050610c5581610c2f565b92915050565b600081519050610c6a81610875565b92915050565b600080600080600060a08688031215610c8c57610c8b6107bb565b5b6000610c9a88828901610c10565b9550506020610cab88828901610c46565b9450506040610cbc88828901610c5b565b9350506060610ccd88828901610c5b565b9250506080610cde88828901610c10565b9150509295509295909350565b6000610cf682610c25565b9150610d0183610c25565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d4057610d3f61094b565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d7d57610d7c61094b565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dba57610db961094b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610df757610df661094b565b5b82820290509291505056fea2646970667358221220d983710a04dece2c3c47cd935cb37427eca80675951c91c601b6f8558aa321ae64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToFunds",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}